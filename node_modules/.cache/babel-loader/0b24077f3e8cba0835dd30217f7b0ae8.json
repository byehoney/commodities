{"remainingRequest":"/Users/yanghaiqiang/Documents/testPro/commodities/node_modules/babel-loader/lib/index.js!/Users/yanghaiqiang/Documents/testPro/commodities/node_modules/eslint-loader/index.js??ref--13-0!/Users/yanghaiqiang/Documents/testPro/commodities/src/router.js","dependencies":[{"path":"/Users/yanghaiqiang/Documents/testPro/commodities/src/router.js","mtime":1557109635376},{"path":"/Users/yanghaiqiang/Documents/testPro/commodities/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanghaiqiang/Documents/testPro/commodities/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanghaiqiang/Documents/testPro/commodities/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from './views/Home.vue';\nimport store from 'store/index';\nVue.use(Router);\nvar router = new Router({\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: Home,\n    meta: {\n      auth: false,\n      // 是否需要登录\n      keepAlive: true // 是否缓存组件\n\n    }\n  }, {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/About.vue');\n    },\n    meta: {\n      auth: true,\n      keepAlive: true\n    }\n  }, {\n    path: '/login',\n    name: 'login',\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"login\" */\n      './views/login.vue');\n    },\n    meta: {\n      auth: false,\n      keepAlive: true\n    }\n  }, {\n    path: '*',\n    // 未匹配到路由时重定向\n    redirect: '/',\n    meta: {// auth: true,\n      // keepAlive: true\n    }\n  }]\n}); // 全局路由钩子函数 对全局有效\n\nrouter.beforeEach(function (to, from, next) {\n  console.log(to);\n  var auth = to.meta.auth;\n  var token = store.getters['login/token'];\n\n  if (auth) {\n    // 需要登录\n    if (token) {\n      next();\n    } else {\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    }\n  } else {\n    next();\n  }\n});\nexport default router;",{"version":3,"sources":["/Users/yanghaiqiang/Documents/testPro/commodities/src/router.js"],"names":["Vue","Router","Home","store","use","router","routes","path","name","component","meta","auth","keepAlive","redirect","beforeEach","to","from","next","console","log","token","getters","query","fullPath"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACAH,GAAG,CAACI,GAAJ,CAAQH,MAAR;AACA,IAAMI,MAAM,GAAG,IAAIJ,MAAJ,CAAW;AACtBK,EAAAA,MAAM,EAAE,CACJ;AACIC,IAAAA,IAAI,EAAE,GADV;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,SAAS,EAAEP,IAHf;AAIIQ,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAE,KADJ;AACW;AACbC,MAAAA,SAAS,EAAE,IAFT,CAEc;;AAFd;AAJV,GADI,EAUJ;AACIL,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGI;AACA;AACA;AACAC,IAAAA,SAAS,EAAE;AAAA,aACP;AAAO;AAAgC,yBAAvC,CADO;AAAA,KANf;AAQIC,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAE,IADJ;AAEFC,MAAAA,SAAS,EAAE;AAFT;AARV,GAVI,EAuBJ;AACIL,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,SAAS,EAAE;AAAA,aACP;AAAO;AAAgC,yBAAvC,CADO;AAAA,KAHf;AAKIC,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAE,KADJ;AAEFC,MAAAA,SAAS,EAAE;AAFT;AALV,GAvBI,EAiCJ;AACIL,IAAAA,IAAI,EAAE,GADV;AACe;AACXM,IAAAA,QAAQ,EAAE,GAFd;AAGIH,IAAAA,IAAI,EAAE,CACF;AACA;AAFE;AAHV,GAjCI;AADc,CAAX,CAAf,C,CA6CA;;AACAL,MAAM,CAACS,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACA,MAAIJ,IAAI,GAAGI,EAAE,CAACL,IAAH,CAAQC,IAAnB;AACA,MAAIS,KAAK,GAAGjB,KAAK,CAACkB,OAAN,CAAc,aAAd,CAAZ;;AAEA,MAAIV,IAAJ,EAAU;AAAE;AACR,QAAIS,KAAJ,EAAW;AACPH,MAAAA,IAAI;AACP,KAFD,MAEO;AACHA,MAAAA,IAAI,CAAC;AACDV,QAAAA,IAAI,EAAE,QADL;AAEDe,QAAAA,KAAK,EAAE;AACHT,UAAAA,QAAQ,EAAEE,EAAE,CAACQ;AADV;AAFN,OAAD,CAAJ;AAMH;AACJ,GAXD,MAWO;AACHN,IAAAA,IAAI;AACP;AACJ,CAnBD;AAoBA,eAAeZ,MAAf","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from './views/Home.vue'\nimport store from 'store/index'\nVue.use(Router)\nconst router = new Router({\n    routes: [\n        {\n            path: '/',\n            name: 'home',\n            component: Home,\n            meta: {\n                auth: false, // 是否需要登录\n                keepAlive: true // 是否缓存组件\n            }\n        },\n        {\n            path: '/about',\n            name: 'about',\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () =>\n                import(/* webpackChunkName: \"about\" */ './views/About.vue'),\n            meta: {\n                auth: true,\n                keepAlive: true\n            }\n        },\n        {\n            path: '/login',\n            name: 'login',\n            component: () =>\n                import(/* webpackChunkName: \"login\" */ './views/login.vue'),\n            meta: {\n                auth: false,\n                keepAlive: true\n            }\n        },\n        {\n            path: '*', // 未匹配到路由时重定向\n            redirect: '/',\n            meta: {\n                // auth: true,\n                // keepAlive: true\n            }\n        }\n    ]\n})\n\n// 全局路由钩子函数 对全局有效\nrouter.beforeEach((to, from, next) => {\n    console.log(to)\n    let auth = to.meta.auth\n    let token = store.getters['login/token'];\n\n    if (auth) { // 需要登录\n        if (token) {\n            next()\n        } else {\n            next({\n                path: '/login',\n                query: {\n                    redirect: to.fullPath\n                }\n            })\n        }\n    } else {\n        next()\n    }\n})\nexport default router\n"]}]}